create a calculator using only javscript


ChatGPT said:

ChatGPT
Certainly! Below is a simple JavaScript calculator that you can use directly in your browser's console or as part of a web page. This version uses basic HTML for structure, but the calculations are handled entirely with JavaScript.

Here's a complete implementation, including both the HTML and JavaScript code:

HTML + JavaScript Code
html
Copy code
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>JavaScript Calculator</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background-color: #f0f0f0;
        }
        #calculator {
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        input {
            width: 100%;
            padding: 10px;
            margin: 5px 0;
            font-size: 18px;
        }
        button {
            width: 23%;
            padding: 10px;
            margin: 5px 1%;
            font-size: 18px;
            cursor: pointer;
        }
    </style>
</head>
<body>

<div id="calculator">
    <input type="text" id="result" disabled />
    <div>
        <button onclick="clearResult()">C</button>
        <button onclick="appendToResult('7')">7</button>
        <button onclick="appendToResult('8')">8</button>
        <button onclick="appendToResult('9')">9</button>
        <button onclick="appendToResult('/')">/</button>
    </div>
    <div>
        <button onclick="appendToResult('4')">4</button>
        <button onclick="appendToResult('5')">5</button>
        <button onclick="appendToResult('6')">6</button>
        <button onclick="appendToResult('*')">*</button>
    </div>
    <div>
        <button onclick="appendToResult('1')">1</button>
        <button onclick="appendToResult('2')">2</button>
        <button onclick="appendToResult('3')">3</button>
        <button onclick="appendToResult('-')">-</button>
    </div>
    <div>
        <button onclick="appendToResult('0')">0</button>
        <button onclick="calculateResult()">=</button>
        <button onclick="appendToResult('+')">+</button>
    </div>
</div>

<script>
    function appendToResult(value) {
        document.getElementById("result").value += value;
    }

    function clearResult() {
        document.getElementById("result").value = '';
    }

    function calculateResult() {
        const resultField = document.getElementById("result");
        try {
            resultField.value = eval(resultField.value);
        } catch (error) {
            alert('Invalid calculation!');
            clearResult();
        }
    }
</script>

</body>
</html>
How It Works:
HTML Structure: The calculator consists of buttons for numbers and operations, and an input field to display the result.
JavaScript Functions:
appendToResult(value): Appends the pressed button's value to the input field.
clearResult(): Clears the input field.
calculateResult(): Evaluates the expression in the input field using the eval() function and displays the result. If the input is invalid, it shows an alert.
Usage:
Copy the code above and paste it into a new .html file on your computer.
Open the HTML file in a web browser.
You can click the buttons to perform calculations.
Note: The eval() function can be risky if not used carefully, especially with untrusted input. In a production setting, consider implementing a proper expression parser instead.





Generate an image of cybersecurity:
